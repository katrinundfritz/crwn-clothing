{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.fetchCollectionsSuccess,\n  paylaod: collectionsMap\n});\nexport const fetchCollectionsFailure = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: error.message\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => fetchCollectionsFailure(error.message));\n  };\n};","map":{"version":3,"sources":["/Users/katrinfritz/code/learning-react/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","collectionsMap","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","paylaod","fetchCollectionsFailure","FETCH_COLLECTIONS_FAILURE","payload","error","message","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,qBAAqB,GAAIC,cAAD,KAAqB;AACxDC,EAAAA,IAAI,EAAEL,eAAe,CAACM;AADkC,CAArB,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGH,cAAc,KAAK;AACxDC,EAAAA,IAAI,EAAEL,eAAe,CAACO,uBADkC;AAExDC,EAAAA,OAAO,EAAEJ;AAF+C,CAAL,CAA9C;AAKP,OAAO,MAAMK,uBAAuB,GAAG,OAAO;AAC5CJ,EAAAA,IAAI,EAAEL,eAAe,CAACU,yBADsB;AAE5CC,EAAAA,OAAO,EAAEC,KAAK,CAACC;AAF6B,CAAP,CAAhC;AAKP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC9C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACZ,qBAAqB,EAAtB,CAAR;AAEAa,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnC,YAAMhB,cAAc,GAAGF,+BAA+B,CAACkB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACH,cAAD,CAAxB,CAAR;AACD,KAHD,EAGGiB,KAHH,CAGST,KAAK,IAAIH,uBAAuB,CAACG,KAAK,CAACC,OAAP,CAHzC;AAID,GARD;AASD,CAVM","sourcesContent":["import ShopActionTypes from './shop.types'\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\n\nexport const fetchCollectionsStart = (collectionsMap) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n})\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.fetchCollectionsSuccess,\n  paylaod: collectionsMap\n})\n\nexport const fetchCollectionsFailure = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: error.message\n})\n\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections')\n    dispatch(fetchCollectionsStart())\n\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n      dispatch(fetchCollectionsSuccess(collectionsMap))\n    }).catch(error => fetchCollectionsFailure(error.message))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}